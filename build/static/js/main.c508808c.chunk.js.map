{"version":3,"sources":["Pages/UserDetails.js","Component/LoginForm.js","Component/RegistrationForm .js","Component/Home.js","Component/Password.js","App.js","index.js"],"names":["UserDetails","LoginForm","initialValues","email","password","validate","values","errors","test","onSubmit","a","resetForm","console","log","role","axios","post","error","Container","className","src","alt","type","name","value","to","Button","variant","RegistrationForm","firstname","lastname","Home","Password","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c508808c.chunk.js","sourcesContent":["export default function UserDetails(){\r\nreturn(\r\n    <h1>UserDetails</h1>\r\n)\r\n}","import React from 'react';\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport UserDetails from \"../Pages/UserDetails\";\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { Container, Button } from 'react-bootstrap';\r\n\r\nconst API_URL = \"https://cmr-api.herokuapp.com/login\";\r\n\r\nconst LoginForm = () => (\r\n  <div>\r\n\r\n    <Formik\r\n      initialValues={{ email: '', password: '' }}\r\n      validate={values => {\r\n        const errors = {};\r\n        if (!values.email) {\r\n          errors.email = 'Required';\r\n        }\r\n        else if (\r\n          !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n        ) {\r\n          errors.email = 'Invalid email address';\r\n        }\r\n        if (!values.password) {\r\n          errors.password = \"Required\"\r\n        }\r\n        return errors;\r\n      }\r\n      }\r\n      onSubmit={async (values, { resetForm }) => {\r\n        console.log(values);\r\n\r\n        try {\r\n          const { email, password, role } = values;\r\n          await axios.post(API_URL, {\r\n            email,\r\n            password,\r\n            role\r\n          });\r\n        } catch (err) {\r\n          console.error(err);\r\n        }\r\n\r\n        resetForm({ values: '' })\r\n        // redirectUserPage(\r\n        //   <Link to=\"UserDetails\"></Link>\r\n        // )\r\n      }}\r\n    >\r\n      {() => (\r\n\r\n        <Container className=\"container\">\r\n\r\n          <img\r\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n            alt=\"profile-img\"\r\n            className=\"profile-img-card\"\r\n          />\r\n          <Form className=\"Form\">\r\n            <label>Email id :  </label><br /><br />\r\n            <Field type=\"email\" name=\"email\" />\r\n            <ErrorMessage name=\"email\" /><br /><br />\r\n            <label>Password :  </label><br /><br />\r\n            <Field type=\"password\" name=\"password\" />\r\n            <ErrorMessage name=\"password\" /><br /><br />\r\n            <label>Role :  </label><br /><br />\r\n            <label>\r\n              <Field type=\"radio\" name=\"role\" value=\"Admin\" />\r\n              Admin\r\n            </label>\r\n            <label>\r\n              <Field type=\"radio\" name=\"role\" value=\"Manager\" />\r\n              Manager\r\n            </label>\r\n            <label>\r\n              <Field type=\"radio\" name=\"role\" value=\"Employee\" />\r\n              Employee\r\n            </label>\r\n            <br /><br />\r\n            <Link to=\"/forgotpassword\">Forgot Password</Link><br /><br />\r\n            <Button variant=\"primary\" type=\"submit\" >\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        </Container>\r\n      )}\r\n    </Formik>\r\n  </div>\r\n);\r\n\r\nexport default LoginForm;","import React from 'react';\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { Container, Button } from 'react-bootstrap';\r\n\r\nconst API_URL = \"https://cmr-api.herokuapp.com/register\";\r\n\r\nconst RegistrationForm = () => (\r\n  <div>\r\n    <Formik\r\n      initialValues={{ email: '', password: '', firstname: '', lastname: '' }}\r\n      validate={values => {\r\n        const errors = {};\r\n\r\n        if (!values.lastname) {\r\n          errors.lastname = \"Required\"\r\n        } if (!values.firstname) {\r\n          errors.firstname = \"Required\"\r\n        }\r\n        if (!values.email) {\r\n          errors.email = 'Required';\r\n        }\r\n        else if (\r\n          !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n        ) {\r\n          errors.email = 'Invalid email address';\r\n        }\r\n        if (!values.password) {\r\n          errors.password = \"Required\"\r\n        }\r\n        return errors;\r\n      }\r\n      }\r\n      onSubmit={async (values, { resetForm }) => {\r\n\r\n        console.log(values.email);\r\n\r\n        try {\r\n          const { firstname, lastname, email, password, role } = values;\r\n          await axios.post(API_URL, {\r\n            firstname,\r\n            lastname,\r\n            email,\r\n            password, role\r\n          });\r\n        } catch (err) {\r\n          console.error(err);\r\n        }\r\n        resetForm({ values: '' })\r\n      }}\r\n    >\r\n      {() => (\r\n        <Container className=\"container\">\r\n\r\n          <img\r\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n            alt=\"profile-img\"\r\n            className=\"profile-img-card\"\r\n          />\r\n          <Form>\r\n            <label>First Name :  </label><br /><br />\r\n            <Field type=\"text\" name=\"firstname\" />\r\n            <ErrorMessage name=\"firstname\" /><br /><br />\r\n            <label>Last Name :  </label><br /><br />\r\n            <Field type=\"text\" name=\"lastname\" />\r\n            <ErrorMessage name=\"lastname\" />\r\n            <br /><br />\r\n\r\n            <label>Email id :  </label><br /><br />\r\n            <Field type=\"email\" name=\"email\" />\r\n            <ErrorMessage name=\"email\" /><br /><br />\r\n            <label>Password :  </label><br /><br />\r\n            <Field type=\"password\" name=\"password\" />\r\n            <ErrorMessage name=\"password\" /><br /><br />\r\n            <label>Role :  </label><br /><br />\r\n            <label>\r\n              <Field type=\"radio\" name=\"role\" value=\"Admin\" />\r\n              Admin\r\n            </label>\r\n            <label>\r\n              <Field type=\"radio\" name=\"role\" value=\"Manager\" />\r\n              Manager\r\n            </label>\r\n            <label>\r\n              <Field type=\"radio\" name=\"role\" value=\"Employee\" />\r\n              Employee\r\n            </label>\r\n            <br /><br />\r\n            <Link to=\"/forgotpassword\">Forgot Password</Link><br /><br />\r\n            <Button type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        </Container>\r\n      )}\r\n    </Formik>\r\n  </div>\r\n);\r\n\r\nexport default RegistrationForm;","import { Link } from \"react-router-dom\";\r\nimport \"../index.css\";\r\nexport default function Home() {\r\n    return (\r\n        <>\r\n            <Link to=\"/login\"><button>Login</button></Link>\r\n            <Link to=\"/register\"><button>Register</button></Link>\r\n\r\n        </>\r\n    )\r\n}","import { Container, Button } from 'react-bootstrap';\r\nexport default function Password() {\r\n    return (\r\n\r\n        <Container className=\"PWcontainer\">\r\n            <form>\r\n                <label>Email id :  </label><br /><br />\r\n                <input type=\"email\" name=\"email\" /><br /><br />\r\n\r\n                <label>Password :  </label><br /><br />\r\n                <input type=\"password\" name=\"password\" />\r\n                <Button className=\"passwordBtn\" variant=\"primary\" type=\"submit\" >\r\n             Submit\r\n           </Button>\r\n            </form>\r\n        </Container>\r\n\r\n    )\r\n}","import LoginForm from \"./Component/LoginForm\";\nimport RegistrationForm from \"./Component/RegistrationForm \";\nimport Home from \"./Component/Home\"\nimport Password from \"./Component/Password\"\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport UserDetails from \"./Pages/UserDetails\";\n\nexport default function App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/login\" component={LoginForm} />\n        <Route path=\"/register\" component={RegistrationForm} />\n        <Route path=\"/forgotpassword\" component={Password} />\n        <Route path=\"/userdetails\" component={UserDetails} />\n      </Switch>\n    </BrowserRouter>\n\n  )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}